<?xml version="1.0" encoding="UTF-8"?>
<!-- 
LTL planner and LTL agent-level nodes with HIL features (mix-initiative controller and IRL).

NEEDS TS AND TASK SPECIFICATION PARAMETERS TO RUN
-->
<launch>
  <!-- Arguments -->
  <arg name="agent_name" default="nexus"/>
  <arg name="initial_beta" default="10.0"/>
  <arg name="gamma" default="10.0"/>
  <arg name="initial_ts_state_from_agent" default="False"/>
  <arg name="obstacle_names" default="[]" />

  <!-- Load parameters -->
  <!-- Agent name -->
  <param name="agent_name" type="string" value="$(arg agent_name)" />
  <!-- Initial value of beta and gamme-->
  <param name="initial_beta" type="double" value="$(arg initial_beta)" />
  <param name="gamma" type="double" value="$(arg gamma)" />

  <!-- Run LTL planner node -->
  <!-- Use HIL plugins -->
  <include file="$(find ltl_automaton_planner)/launch/ltl_planner.launch" >
    <arg name="initial_ts_state_from_agent" default="False"/>
  </include>
  <group ns="ltl_planner/plugin">
      <group ns="TrapDetectionPlugin">
          <param name="path" value="ltl_automaton_hil_mic.trap_detection"/>
          <param name="args" value=""/>
      </group>
      <group ns="IRLPlugin">
          <param name="path" value="ltl_automaton_hil_mic.inverse_reinforcement_learning"/>
          <param name="args" value=""/>
      </group>  
  </group>
 
  <!-- Run HIL nodes -->
  <node name="hil_vel_cmd_mixer" pkg="ltl_automaton_hil_mic" type="vel_cmd_mix_initiative_controller.py" output="screen" />

  <!-- Run Nexus LTL node with the 2D pose region monitor-->
  <node name="ltl_automaton_nexus_node" pkg="ltl_automaton_nexus" type="ltl_automaton_nexus_node.py" output="screen" >
        <rosparam param="obstacle_names" subst_value="True">$(arg obstacle_names)</rosparam> 
  </node>
  <node name="$(arg agent_name)_region_2d_pose_monitor" pkg="ltl_automaton_std_transition_systems" type="region_2d_pose_monitor.py" output="screen" >
  	<remap from="agent_2d_region_pose" to="/qualisys/$(arg agent_name)/pose" />
  </node>

</launch>
